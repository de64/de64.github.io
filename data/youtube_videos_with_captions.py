"""
Downloads a list of youtube videos, that have German autogenerated captions.

pip3 install youtube_dl
"""

import json
import os
import re

from tqdm import tqdm

import youtube_dl as dl
from youtube_dl.extractor import YoutubePlaylistIE


def download_autosubtitles(youtube_id, langs=('de',)):
    DL = dl.YoutubeDL()
    DL.params['quiet'] = True
    DL.params['writeautomaticsub'] = True
    DL.params['subtitleslangs'] = list(langs)
    info = DL.extract_info(id, download=False)
    subtitles = info['requested_subtitles']

    for sub_info in subtitles.values():
        if sub_info.get('data') is None:
            uf = DL.urlopen(sub_info['url'])
            sub_info['data'] = uf.read().decode('utf-8')

    subtitles = dict((l, sub_info['data']) for l, sub_info in subtitles.items())
    return subtitles

def clean_up_autosubtitles(raw):
    """Captions format to pure text"""
    # remove initial params
    clean = raw.split("##")[-1]

    # remove all the unnecessary tags
    clean = re.sub(r'<.*?>', '', clean)

    text = [""]
    for line in clean.split('\n'):
        if len(line) < 2 or line[2] == ":":
            continue

        if line != text[-1]:
            text.append(line)
    
    clean = ' '.join(text)

    return clean

playlists = {
    'PL56A756F700BF4ED7': {'category':'European Focus'},
    'PLdrKWT9w9Hg1FmAYFvymR7Wu-iJr_0z7M': {'category':'Music in Germany'},
    'PL1755402CE481AE1A': {'category':'Made in Germany'},
    'PLdrKWT9w9Hg3eVswr9n01TODWrqS2KJE3': {'category':'Dresscode'},
    'PL2D71C5EAF1B3FF0C': {'category':'Most beautiful cities in regions in Europe'},
    'PL93EFF128EB49BB1A': {'category':'News from around the world'},
    'PLAFE67DD5755CC126': {'category':'Digitization'},
    'PLdrKWT9w9Hg3trX6Hacm8dz8ZgT1cAVum': {'category':'50 Kitchens'},
    'PLdrKWT9w9Hg3hLrhG8mbu26a0VpHNd_5Z': {'category':'Living room around the world'},
    'PL70E84E28A9595359': {'category':'Science and research'},
    'PLdrKWT9w9Hg2atCDu9nvzXCjhPth8eSrC': {'category':'Living and culture in Europe'},
}

print('Gathering videos in playlists...')
entries = []

for playlist in tqdm(sorted(playlists)):
    description = playlists[playlist]
    ydl = dl.YoutubeDL()
    ydl.params['extract_flat'] = True
    ie = YoutubePlaylistIE(ydl)
    result = ie.extract('https://www.youtube.com/playlist?list=' + playlist)

    for entry in result['entries']:
        entries.append({
            'id': entry['id'],
            'title': entry['title'],
            'category': description['category']
        })

print('Gathering subtitles for all the videos...')
entries_with_subs = []

for entry in tqdm(entries):
    try:
        id = entry['id']
        subtitles = download_autosubtitles(id)
        subs = clean_up_autosubtitles(subtitles['de'])
        entry['text'] = subs
        entries_with_subs.append(entry)
    except BaseException as ex:
        print(ex)

json.dump(
    entries_with_subs, 
    open('youtube_videos_with_captions.json', 'w'),
    sort_keys=True,
    indent=2
)